{"ast":null,"code":"'use strict';\n\nvar convertExpression = require('./convert-expression');\n\nvar validatePattern = require('./pattern-validation');\n\nvar events = require('events');\n\nfunction matchPattern(pattern, value) {\n  if (pattern.indexOf(',') !== -1) {\n    var patterns = pattern.split(',');\n    return patterns.indexOf(value.toString()) !== -1;\n  }\n\n  return pattern === value.toString();\n}\n\nfunction mustRun(task, date) {\n  var runInSecond = matchPattern(task.expressions[0], date.getSeconds());\n  var runOnMinute = matchPattern(task.expressions[1], date.getMinutes());\n  var runOnHour = matchPattern(task.expressions[2], date.getHours());\n  var runOnDayOfMonth = matchPattern(task.expressions[3], date.getDate());\n  var runOnMonth = matchPattern(task.expressions[4], date.getMonth() + 1);\n  var runOnDayOfWeek = matchPattern(task.expressions[5], date.getDay());\n  var runOnDay = false;\n  var delta = task.initialPattern.length === 6 ? 0 : -1;\n\n  if (task.initialPattern[3 + delta] === '*') {\n    runOnDay = runOnDayOfWeek;\n  } else if (task.initialPattern[5 + delta] === '*') {\n    runOnDay = runOnDayOfMonth;\n  } else {\n    runOnDay = runOnDayOfMonth || runOnDayOfWeek;\n  }\n\n  return runInSecond && runOnMinute && runOnHour && runOnDay && runOnMonth;\n}\n\nfunction Task(pattern, execution) {\n  validatePattern(pattern);\n  this.initialPattern = pattern.split(' ');\n  this.pattern = convertExpression(pattern);\n  this.execution = execution;\n  this.expressions = this.pattern.split(' ');\n  events.EventEmitter.call(this);\n\n  this.update = date => {\n    if (mustRun(this, date)) {\n      new Promise((resolve, reject) => {\n        this.emit('started', this);\n        var ex = this.execution();\n\n        if (ex instanceof Promise) {\n          ex.then(resolve).catch(reject);\n        } else {\n          resolve();\n        }\n      }).then(() => {\n        this.emit('done', this);\n      }).catch(error => {\n        console.error(error);\n        this.emit('failed', error);\n      });\n    }\n  };\n}\n\nTask.prototype = events.EventEmitter.prototype;\nmodule.exports = Task;","map":{"version":3,"sources":["/Users/montyj/Documents/projects/catchyobus/node_modules/node-cron/src/task.js"],"names":["convertExpression","require","validatePattern","events","matchPattern","pattern","value","indexOf","patterns","split","toString","mustRun","task","date","runInSecond","expressions","getSeconds","runOnMinute","getMinutes","runOnHour","getHours","runOnDayOfMonth","getDate","runOnMonth","getMonth","runOnDayOfWeek","getDay","runOnDay","delta","initialPattern","length","Task","execution","EventEmitter","call","update","Promise","resolve","reject","emit","ex","then","catch","error","console","prototype","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar convertExpression = require('./convert-expression');\nvar validatePattern = require('./pattern-validation');\n\nvar events = require('events');\n\n\nfunction matchPattern(pattern, value){\n  if( pattern.indexOf(',') !== -1 ){\n    var patterns = pattern.split(',');\n    return patterns.indexOf(value.toString()) !== -1;\n  }\n  return pattern === value.toString();\n}\n\nfunction mustRun(task, date){\n  var runInSecond = matchPattern(task.expressions[0], date.getSeconds());\n  var runOnMinute = matchPattern(task.expressions[1], date.getMinutes());\n  var runOnHour = matchPattern(task.expressions[2], date.getHours());\n  var runOnDayOfMonth = matchPattern(task.expressions[3], date.getDate());\n  var runOnMonth = matchPattern(task.expressions[4], date.getMonth() + 1);\n  var runOnDayOfWeek = matchPattern(task.expressions[5], date.getDay());\n  \n  var runOnDay = false;\n  var delta = task.initialPattern.length === 6 ? 0 : -1;\n  \n  if (task.initialPattern[3 + delta] === '*') {\n    runOnDay = runOnDayOfWeek;\n  } else if (task.initialPattern[5 + delta] === '*') {\n    runOnDay = runOnDayOfMonth;\n  } else {\n    runOnDay = runOnDayOfMonth || runOnDayOfWeek;\n  }\n  \n  return runInSecond && runOnMinute && runOnHour && runOnDay && runOnMonth;\n}\n\nfunction Task(pattern, execution){\n  validatePattern(pattern);\n  this.initialPattern = pattern.split(' ');\n  this.pattern = convertExpression(pattern);\n  this.execution = execution;\n  this.expressions = this.pattern.split(' ');\n  \n  events.EventEmitter.call(this);\n  \n  this.update = (date) => {\n    if(mustRun(this, date)){\n      new Promise((resolve, reject) => {\n        this.emit('started', this);\n        var ex = this.execution();\n        if(ex instanceof Promise){\n          ex.then(resolve).catch(reject);\n        } else {\n          resolve();\n        }\n      }).then(() => {\n        this.emit('done', this);\n      }).catch((error) => {\n        console.error(error);\n        this.emit('failed', error);\n      }); \n    }\n  };\n}\n\nTask.prototype = events.EventEmitter.prototype;\nmodule.exports = Task;\n\n"]},"metadata":{},"sourceType":"script"}