{"ast":null,"code":"'use strict';\n\nmodule.exports = function () {\n  function convertSteps(expressions) {\n    var stepValuePattern = /^(.+)\\/(\\d+)$/;\n\n    for (var i = 0; i < expressions.length; i++) {\n      var match = stepValuePattern.exec(expressions[i]);\n      var isStepValue = match !== null && match.length > 0;\n\n      if (isStepValue) {\n        var values = match[1].split(',');\n        var setpValues = [];\n        var divider = parseInt(match[2], 10);\n\n        for (var j = 0; j <= values.length; j++) {\n          var value = parseInt(values[j], 10);\n\n          if (value % divider === 0) {\n            setpValues.push(value);\n          }\n        }\n\n        expressions[i] = setpValues.join(',');\n      }\n    }\n\n    return expressions;\n  }\n\n  return convertSteps;\n}();","map":{"version":3,"sources":["/Users/montyj/Documents/projects/catchyobus/node_modules/node-cron/src/convert-expression/step-values-conversion.js"],"names":["module","exports","convertSteps","expressions","stepValuePattern","i","length","match","exec","isStepValue","values","split","setpValues","divider","parseInt","j","value","push","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAkB,YAAM;AACtB,WAASC,YAAT,CAAsBC,WAAtB,EAAkC;AAChC,QAAIC,gBAAgB,GAAG,eAAvB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,WAAW,CAACG,MAA/B,EAAuCD,CAAC,EAAxC,EAA2C;AACzC,UAAIE,KAAK,GAAGH,gBAAgB,CAACI,IAAjB,CAAsBL,WAAW,CAACE,CAAD,CAAjC,CAAZ;AACA,UAAII,WAAW,GAAGF,KAAK,KAAK,IAAV,IAAkBA,KAAK,CAACD,MAAN,GAAe,CAAnD;;AACA,UAAGG,WAAH,EAAe;AACb,YAAIC,MAAM,GAAGH,KAAK,CAAC,CAAD,CAAL,CAASI,KAAT,CAAe,GAAf,CAAb;AACA,YAAIC,UAAU,GAAG,EAAjB;AACA,YAAIC,OAAO,GAAGC,QAAQ,CAACP,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAtB;;AACA,aAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIL,MAAM,CAACJ,MAA3B,EAAmCS,CAAC,EAApC,EAAuC;AACrC,cAAIC,KAAK,GAAGF,QAAQ,CAACJ,MAAM,CAACK,CAAD,CAAP,EAAY,EAAZ,CAApB;;AACA,cAAGC,KAAK,GAAGH,OAAR,KAAoB,CAAvB,EAAyB;AACvBD,YAAAA,UAAU,CAACK,IAAX,CAAgBD,KAAhB;AACD;AACF;;AACDb,QAAAA,WAAW,CAACE,CAAD,CAAX,GAAiBO,UAAU,CAACM,IAAX,CAAgB,GAAhB,CAAjB;AACD;AACF;;AACD,WAAOf,WAAP;AACD;;AAED,SAAOD,YAAP;AACD,CAvBgB,EAAjB","sourcesContent":["'use strict';\n\nmodule.exports = (() => {\n  function convertSteps(expressions){\n    var stepValuePattern = /^(.+)\\/(\\d+)$/;\n    for(var i = 0; i < expressions.length; i++){\n      var match = stepValuePattern.exec(expressions[i]);\n      var isStepValue = match !== null && match.length > 0;\n      if(isStepValue){\n        var values = match[1].split(',');\n        var setpValues = [];\n        var divider = parseInt(match[2], 10);\n        for(var j = 0; j <= values.length; j++){\n          var value = parseInt(values[j], 10);\n          if(value % divider === 0){\n            setpValues.push(value);\n          }\n        }\n        expressions[i] = setpValues.join(',');\n      }\n    }\n    return expressions;\n  }\n\n  return convertSteps;\n})();\n\n"]},"metadata":{},"sourceType":"script"}