{"version":3,"sources":["components/GetData.js","components/Confirmed.js","views/Main.js","App.js","reportWebVitals.js","index.js"],"names":["cron","require","GetRoutes","prediction","busTask","useState","routes","setRoutes","routeName","setRouteName","direction","setDirection","destination","setDestination","stops","setStops","stopId","setStopId","phoneNumber","setPhoneNumber","useEffect","axios","get","then","res","data","message","className","Form","onSubmit","e","preventDefault","Label","FormGroup","row","Col","sm","Input","type","onChange","target","value","map","route","index","Name","Button","color","loopData","i","length","stpid","stpnm","Destination","schedule","prd","prdctdn","console","log","stop","navigate","dangerouslySetInnerHTML","__html","GetStops","to","Main","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cc33307.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Button, Form, Input, Label, FormGroup, Col } from  'reactstrap';\nimport \"../components/GetData.css\";\nimport { navigate } from '@reach/router';\n\nvar cron = require('node-cron');\n\n\nexport default function GetRoutes () {\n    let initialValue = \" \";\n\n    const [routes, setRoutes] = useState([]);\n    const [routeName, setRouteName] = useState(); \n    const [direction, setDirection] = useState([]);\n    const [destination, setDestination] = useState();\n    const [stops, setStops] = useState();\n    const [stopId, setStopId] = useState();\n    const [phoneNumber, setPhoneNumber] = useState(initialValue);\n\n    let prediction;\n\n    let busTask;\n\n\n\n\n    useEffect(() => {\n        axios.get('https://api.actransit.org/transit/routes/?token=A6B7D2FAF537BF5AC5B44DEF8C215F7E')\n            .then(res => {\n                setRoutes(res.data);\n            });\n    }, []);\n\n    const whatRoute = e => {\n        e.preventDefault();\n        setRouteName(e.target.value);\n    };\n\n\n    const whatDirection = e => {\n        e.preventDefault();\n        setDestination(e.target.value);\n    };\n\n    const whatStop = e => {\n        e.preventDefault();\n        setStopId(e.target.value);\n    };\n\n    const saveThis = e => {\n        e.preventDefault();\n        \n        axios.get(`https://api.actransit.org/transit/route/${routeName}/destinations/?token=A6B7D2FAF537BF5AC5B44DEF8C215F7E`)\n            .then(res => {\n                setDirection(res.data);\n            });\n    };\n\n    const saveThat = e => {\n        e.preventDefault();\n        \n        axios.get(`https://api.actransit.org/transit/actrealtime/stop?rt=${routeName}&dir=${destination}&token=A6B7D2FAF537BF5AC5B44DEF8C215F7E`)\n        .then(res => {\n            var data = res.data[\"bustime-response\"].stops;\n            var loopData = [\"<option>Pick Stop</option>\"];\n            var i = 0;\n            while(i < data.length){\n                loopData += `<option value=\"${data[i].stpid}\">${data[i].stpnm}</option>`;\n                i++;\n            }\n            setStops(loopData);\n        });\n    };\n\n\n    const saveAlso = e => {\n        e.preventDefault();\n        \n        busTask = cron.schedule('*/5 * * * *', () => {\n        axios.get(`https://api.actransit.org/transit/actrealtime/prediction?&stpid=${stopId}&rt=${routeName}&top=1&tmres=m&token=A6B7D2FAF537BF5AC5B44DEF8C215F7E`)\n            .then(res => {\n                prediction = (res.data[\"bustime-response\"].prd[0].prdctdn);\n                    catchBus();\n                });\n            });\n\n            navigate(\"/letsgo\");\n    };\n\n    var message;\n\n    function catchBus() {\n\n            if(prediction < 10 && prediction >= 5) {\n            \n                message = `Your bus is ${prediction} minutes away. Get to the bus stop!`;\n    \n                axios.get(`/send-text?phoneNumber=${phoneNumber}&message=${message}`);\n                console.log(message);\n                busTask.stop();\n    \n            } else if(prediction < 5) {\n                message = `Your bus is ${prediction} minutes away. You might have to wait for the next one.`;\n\n                axios.get(`/send-text?phoneNumber=${phoneNumber}&message=${message}`);\n                console.log(message);\n            } else {\n                message = `Chill out! There are ${prediction} minutes until your bus comes.`;\n                console.log(message);\n            }\n        \n    }\n\n\n    return (\n        <div>\n            <div className=\"container\">\n                <Form onSubmit={saveThis}>\n                    <Label className=\"purple\">Pick and submit a route</Label>\n                    <br />\n                    <FormGroup row>\n                    <Col sm={10}>\n                    <Input type=\"select\" className=\"form-select\" onChange={whatRoute}>\n                        <option>Pick route</option>\n                        {routes.map((route, index) => {\n                            return <option key={index}>\n                                {route.Name}</option>\n                        })};\n                    </Input>\n                    </Col>\n                    <Button color=\"primary\">Submit</Button>\n                    </FormGroup>\n                </Form>\n                <Form onSubmit={saveThat}>\n                    \n                    <Label>Pick and submit a direction</Label>\n                    <br />\n                    <FormGroup row>\n                    <Col sm={10}>\n                    <Input type=\"select\" onChange={whatDirection}>\n                        <option>Pick Direction</option>\n                        {direction.map((direction, index) => {\n                            return <option key={index} >\n                                {direction.Destination}</option>\n                        })};\n                    </Input>\n                    </Col>\n                    <Button color=\"primary\">Submit</Button>\n                    </FormGroup>\n                </Form>\n                <Form onSubmit={saveAlso}>\n                    <Label>Pick your Stop, then...</Label>\n                    <FormGroup row>\n                    <Col sm={10}>\n                    <Input type=\"select\" dangerouslySetInnerHTML={{__html: stops}} onChange={whatStop}>\n                    </Input>\n                    </Col>\n                    </FormGroup>\n                    <Label>What's your number?</Label><br />\n                    <FormGroup row>\n                    <Col sm={10}>\n                    <Input className=\"form-control\" onChange={(e) => setPhoneNumber(e.target.value)} value={phoneNumber}></Input>\n                    </Col>\n                    <Input type='hidden' value={message}></Input>\n                    <Button color=\"primary\">Submit</Button>\n                    </FormGroup>\n                </Form>\n            </div>\n        </div>\n    )\n};","import React from 'react';\nimport { Link } from '@reach/router';\n\n\nexport default function GetStops(){\n\n    \n\n    return (\n        <div>\n            <div>\n                <p>We got you. You'll get a text when you need to catch yo bus!</p>\n                <Link to={\"/\"}>back</Link>\n            </div>\n        </div>\n    )\n};","import React from 'react';\nimport GetRoutes from '../components/GetData';\nimport { Router } from '@reach/router';\nimport GetStops from '../components/Confirmed';\n\n\nexport default function Main() {\n\n\n    return (\n        <div>\n            <div>\n                <p>Hola, this is a page</p>\n            </div>\n            <GetRoutes />\n            <Router>\n                <GetStops path=\"/letsgo\" />\n            </Router>\n        </div>\n    )\n}","import './App.css';\nimport Main from '../src/views/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}